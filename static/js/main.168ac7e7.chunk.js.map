{"version":3,"sources":["components/Movie.js","components/MovieList.js","components/PageNation.js","components/SearchComp.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","props","state","title","actorList","actor","directorList","director","this","result","Array","split","map","className","id","dangerouslySetInnerHTML","__html","subtitle","userRating","pubDate","class","href","link","src","image","alt","Component","MovieList","movieList","movie","index","PageNation","setCurrentPage","page","alert","document","getElementById","classList","add","prevPage","currentPage","nextPage","moviePerPage","totalCount","Math","ceil","pageNumbers","i","push","pageList","onClick","SearchComp","searchMovie","searchText","value","handleChange","e","setState","target","name","handleKeyPress","key","type","placeholder","onKeyPress","onChange","App","getMovies","a","axios","method","url","dataType","headers","then","response","console","log","data","items","movie_obj","length","concat","currentMovieList","totalMovieList","indexOfLast","indexOfFirst","slice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.168ac7e7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../css/Movie.css\";\r\n\r\nclass Movie extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.title,\r\n            actorList: this.props.actor,\r\n            directorList: this.props.director,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { title, actor, director } = this.props;\r\n        var result = new Array();\r\n        result = actor.split(\"|\");\r\n        actor = result.map(actor => <span className=\"actor\">{actor}</span>);\r\n\r\n        result = director.split(\"|\");\r\n        director = result.map(director => <span className=\"director\">{director}</span>);\r\n\r\n\r\n        return (\r\n\r\n            <div id=\"movie\">\r\n\r\n                <div id=\"movie-left\">\r\n                    <div dangerouslySetInnerHTML={{ __html: title }}></div>\r\n                    <div><span>{this.props.subtitle}</span></div>\r\n                    <div><span>네티즌:</span><span>{this.props.userRating}</span></div>\r\n                    <div><span>{this.props.pubDate}</span><span>개봉</span></div>\r\n                    <div><span>감독:</span><span>{director}</span></div>\r\n                    <div><span>출연:</span><span>{actor}</span></div>\r\n                    <div><h1 class=\"detail\">상세소개:</h1><a href={this.props.link}>링크</a></div>\r\n                </div>\r\n\r\n                <div id=\"movie-right\">\r\n                    <img src={this.props.image} alt=\"포스터\"></img>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movie;","\r\nimport React, { Component } from 'react';\r\n\r\nimport Movie from './Movie';\r\n\r\nclass MovieList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            movieList:this.props.movieList,\r\n        }\r\n    }\r\n\r\n    render(){\r\n    \r\n    const {movieList}=this.props;\r\n\r\n        return (\r\n    <div className=\"MovieList\">\r\n\r\n  <div>\r\n    {//중괄호 치면 태그안에 자바스크립트 사용 가능\r\n    movieList.map(movie=>(\r\n      <Movie\r\n      key={movie.index}\r\n      actor={movie.actor}\r\n      director={movie.director}\r\n      image={movie.image}\r\n      link={movie.link}\r\n      pubDate={movie.pubDate}\r\n      subtitle={movie.subtitle}\r\n      title={movie.title}\r\n      userRating={movie.userRating}\r\n      ></Movie>))\r\n    }\r\n  </div>\r\n\r\n    </div>\r\n  );\r\n    }\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { Component } from 'react';\r\nimport \"../css/PageNation.css\";\r\n\r\nclass PageNation extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            moviePerPage:this.props.moviePerPage,\r\n            totalCount:this.props.totalCount,\r\n        }\r\n    }\r\n\r\n    setCurrentPage=(page)=>{\r\n        alert(\"클릭한 페이지\"+page);\r\n        this.props.setCurrentPage(page);\r\n        document.getElementById(\"pagination>span\").classList.add(\"highlight\")\r\n    }\r\n\r\n    prevPage=()=>{\r\n        alert(\"이전 페이지!\")\r\n        const currentPage=this.props.currentPage\r\n        if(currentPage===1){\r\n            alert(\"1페이지 입니다!\");\r\n            alert(\"이전으로 갈 수 없습니다.\");\r\n            return\r\n        }\r\n        this.props.setCurrentPage(currentPage-1);\r\n        \r\n    }\r\n\r\n    nextPage=()=>{\r\n        alert(\"다음 페이지!\")\r\n        const currentPage=this.props.currentPage\r\n        const {moviePerPage,totalCount}=this.props;\r\n        const lastPage=Math.ceil(totalCount/moviePerPage);\r\n        if(lastPage===currentPage){\r\n            alert(\"페이지의 끝에 도달했습니다!\")\r\n            alert(\"더이상 갈 수 없습니다!\")\r\n            return\r\n        }\r\n        this.props.setCurrentPage(currentPage+1);\r\n    }\r\n\r\n    render(){\r\n        let pageNumbers = [];\r\n        const {moviePerPage,totalCount}=this.props;        \r\n        for(var i=1; i<=Math.ceil(totalCount/moviePerPage); i++)\r\n        {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        const pageList = pageNumbers.map(page => \r\n            (<span className={\"page \"+page} key={page} onClick={()=>this.setCurrentPage(page)}>{page}</span> )\r\n        );\r\n\r\n        return(\r\n            <div id=\"pagination\">\r\n                <span className=\"page\" onClick={this.prevPage}>&lt;</span>\r\n                {pageList}\r\n                <span className=\"page\" onClick={this.nextPage}>&gt;</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageNation;","import React, { Component } from 'react';\r\nimport \"../css/SearchComp.css\";\r\n\r\nclass SearchComp extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            searchText:''\r\n        }\r\n    }\r\n\r\n    searchMovie=()=>{\r\n        const {searchText}=this.state\r\n        alert(searchText+\"검색!\")\r\n        this.props.searchMovie(searchText)\r\n        var searchInput=document.getElementById(\"search-input\")\r\n        searchInput.value=''\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n          this.searchMovie();\r\n        }\r\n    };\r\n\r\n    render(){\r\n \r\n        return(\r\n            <div id=\"search-comp\">\r\n                <input type=\"text\" id=\"search-input\" placeholder=\"검색어 입력\"\r\n                onKeyPress={this.handleKeyPress}\r\n                onChange={this.handleChange} name=\"searchText\"></input>\r\n                <button onClick={this.searchMovie}>검색</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchComp;","import './App.css';\nimport './css/imageSprite.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport MovieList from './components/MovieList';\nimport PageNation from './components/PageNation';\nimport SearchComp from './components/SearchComp';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n      searchText:'',\n      movieList:[\n\n      ],\n      moviePerPage:3,\n      totalCount:0,\n      currentPage:1,\n    }\n  }\n\n  getMovies = async(searchText)=>{\n    await axios({\n      method: 'get',\n      url: '/v1/search/movie.json?query='+searchText,\n      dataType: 'json',\n      headers: {\n        \"X-Naver-Client-Id\": 'FcXHkX_qtl65OMEljDS8',\n        \"X-Naver-Client-Secret\": 'mzPsOA0aVg',\n      },\n     \n    })\n    .then(response => \n        { \n          this.setState({\n              movieList:[]\n            })\n          console.log(response.data.items);\n          const movie=response.data.items;//옮겨담아서 사용을 편하게 함\n          let movie_obj=null;\n          \n          this.setState({\n            totalCount:movie.length\n          })\n\n          for(var i=0; i<movie.length; i++){\n    \n            movie_obj={\n              actor:movie[i].actor,\n              director:movie[i].director,\n              image:movie[i].image,\n              link:movie[i].link,\n              pubDate:movie[i].pubDate,\n              subtitle:movie[i].subtitle,\n              title:movie[i].title,\n              userRating:movie[i].userRating\n            }\n\n            const {movieList}=this.state;\n            this.setState({\n              movieList:movieList.concat(movie_obj)\n            })\n            movie_obj=null;\n            \n          }\n        }\n    );\n  }\n\n  componentDidMount(){\n    //this.getMovies();\n  }\n\n  handleChange=(e)=>{\n    this.setState({\n      [e.target.name]:e.target.value\n    })\n  }\n\n  searchMovie=(searchText)=>{\n    this.getMovies(searchText);\n  }\n\n  currentMovieList=(totalMovieList)=>{\n    const{currentPage,moviePerPage}=this.state;\n    const indexOfLast = currentPage * moviePerPage;\n    const indexOfFirst = indexOfLast - moviePerPage;\n    const sliceMovieList = totalMovieList.slice(indexOfFirst,indexOfLast);\n    return sliceMovieList;\n  }\n\n  setCurrentPage=(page)=>{\n      alert(\"페이지 변경(App)\"+page);\n      this.setState({\n        currentPage:page\n      });\n  }\n\n  render(){\n    const {movieList,totalCount,moviePerPage,currentPage}=this.state;\n    return (\n    <div className=\"App\">\n      <SearchComp searchMovie={this.searchMovie}></SearchComp>\n      <MovieList movieList={this.currentMovieList(movieList)}></MovieList>\n      <PageNation totalCount={totalCount} moviePerPage={moviePerPage}\n      currentPage={currentPage}\n      setCurrentPage={this.setCurrentPage}></PageNation>\n    </div>\n  );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}